<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<VSModel name="Bookshop" version="2">

<meta>
</meta>

<id>F3C83B1CDF3611E2851D002170EF8FEA</id>
<IsInProject>true</IsInProject>
<sig>ZWQ9MyZ0Y3Y9NSZsaXNhdj03LjAuMyAoNy4wLjMuODgpJm5vZGVzPS01OTcxMTg4NDI=</sig>
<subprocess>false</subprocess>

<initState>
</initState>

<resultState>
</resultState>

<deletedProps>
</deletedProps>

    <Node log="" name="Define Utility Classes" next="Load DataStore" quiet="false" think="500-1S" type="com.itko.lisa.test.ScriptNode" uid="9A406D0FFA0511E2B545005056860B58" useFilters="true" version="1"> 


      <!-- Assertions -->
		<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
		<log>Assertion name: Any Exception Then Fail checks for: true  is of type: Assert on Invocation Exception.</log>
		<then>fail</then>
		<valueToAssertKey/>
				<param>.*</param>
		</CheckResult>

		<onerror>abort</onerror>
		<script>import com.ca.casd.lisa.extensions.odata.*;&#13;
&#13;
public String getJSONPayloadProperty(String strPropertyName) {&#13;
    Request sourceRequest = (Request) testExec.getStateObject("lisa.vse.request");&#13;
    ODataDataProtocolHandler odph = new ODataDataProtocolHandler();&#13;
    odph.getJsonPayloadProperty(sourceRequest, strPropertyName);&#13;
}&#13;
</script>
    </Node>

    <Node log="" name="Load DataStore" next="Load Entity Data Model" quiet="false" think="500-1S" type="com.ca.casd.lisa.extensions.odata.devteststeps.LoadDVSDataStoreStep" uid="6FC4B18846F511E3B5CA002170EF8FEA" useFilters="true" version="1"> 

      <!-- Assertions -->
		<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
		<log>Assertion name: Any Exception Then Fail checks for: true  is of type: Assert on Invocation Exception.</log>
		<then>fail</then>
		<valueToAssertKey/>
			<param>.*</param>
		</CheckResult>

		<onerror>abort</onerror>

		<filename>jdbc:h2:mem:DBBookshop;INIT=RUNSCRIPT FROM '{{DDME_DATA_DIR}}/{{DDME_INIT_SCRIPT}}'</filename>
		<dataStoreName>DDMEDataStore</dataStoreName>
		<dataStoreType>H2</dataStoreType>
		<dbUserName>test</dbUserName>
		<dbPassword>test</dbPassword>
    </Node>


    <Node log="" name="Load Entity Data Model" next="Virtual HTTPS Listener" quiet="false" think="500-1S" type="com.itko.lisa.test.ScriptNode" uid="9A406D0FFA0511E2B545005056860B58" useFilters="true" version="1"> 


      <!-- Assertions -->
		<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
		<log>Assertion name: Any Exception Then Fail checks for: true  is of type: Assert on Invocation Exception.</log>
		<then>fail</then>
		<valueToAssertKey/>
			<param>.*</param>
		</CheckResult>

		<onerror>abort</onerror>
		<script>import com.itko.lisa.test.TestCase;&#13;
import com.itko.lisa.test.TestExec;&#13;
import com.itko.lisa.test.TestNode;&#13;
import com.itko.lisa.test.TestRunException;&#13;
&#13;
import com.itko.lisa.vse.stateful.model.Request;&#13;
import com.ca.casd.utilities.commonUtils.metadata.Metadata;&#13;
import com.ca.casd.lisa.extensions.odata.metadata.*;&#13;
import com.ca.casd.lisa.extensions.odata.ODMEResponseMetadataXML;&#13;
&#13;
MetadataParser metadataParser = new MetadataParser(testExec);&#13;
&#13;
String edmToDbMappingFileName = "{{LISA_PROJ_ROOT}}/Data/EDMToDB.xml";&#13;
&#13;
metadataParser.parseXmlFile(edmToDbMappingFileName);&#13;
&#13;
Metadata m = metadataParser.getMetadata();&#13;
&#13;
if (m != null) {&#13;
    testExec.setStateObject("EDMDBMetadata", m); &#13;
}&#13;
&#13;
return;&#13;
</script>
    </Node>	

    <Node log="" name="Virtual HTTPS Listener" next="VS Image Response Selection" quiet="true" think="0" type="com.itko.lisa.vse.stateful.protocol.http.HttpListenStep" uid="5D12A599051211E3A883002170EF8FEA" useFilters="true" version="1"> 


      <!-- Filters -->
      <Filter type="com.itko.lisa.vse.stateful.common.DataProtocolFilter">
        <valueToFilterKey>lisa.Virtual HTTPS Listener.rsp</valueToFilterKey>
		<dataProtocol>com.ca.casd.lisa.extensions.odata.ODataDataProtocolHandler</dataProtocol>
		<processRequests>true</processRequests>
		<processResponses>false</processResponses>
		<CustomFilterData>
		</CustomFilterData>
      </Filter>

		<!-- Assertions -->
		<CheckResult assertTrue="true" name="If being efficient" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
		<log>Current execution mode is Most Efficient, branching to VS Image Response Selection</log>
		<then>VS Image Response Selection</then>
		<valueToAssertKey/>
				<executionMode>EFFICIENT</executionMode>
		</CheckResult>

		<outputAsObject>true</outputAsObject>
		<onExceptionStep>abort</onExceptionStep>
		<listenPort>8844</listenPort>
		<basePath>/odata/v4/Bookshop</basePath>
		<bindOnly>false</bindOnly>
		<useSSL>false</useSSL>
    </Node>


    <Node log="" name="VS Image Response Selection" next="Virtual HTTPS Responder" quiet="true" think="0" type="com.itko.lisa.vse.stateful.ConversationalStep" uid="null" useFilters="true" version="1"> 


      <!-- Assertions -->
		<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
		<log>Current execution mode is Image Validation, branching to Virtual HTTPS Live Invocation</log>
		<then>Virtual HTTPS Live Invocation</then>
		<valueToAssertKey/>
				<executionMode>VALIDATION</executionMode>
		</CheckResult>

		<CheckResult assertTrue="true" name="If tracking" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
		<log>Current execution mode is Transaction Tracking, branching to Virtual Service Tracking</log>
		<then>Virtual Service Tracking</then>
		<valueToAssertKey/>
				<executionMode>TRACK</executionMode>
		</CheckResult>

		<vsiSource>{{LISA_PROJ_ROOT}}/VServices/Images/Bookshop.vsi</vsiSource>
		<requestPropertyName>lisa.vse.request</requestPropertyName>
		<outputAsObject>true</outputAsObject>
		<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node log="" name="Virtual HTTPS Responder" next="Virtual HTTPS Listener" quiet="false" think="0" type="com.itko.lisa.vse.stateful.protocol.http.HttpRespondStep" uid="null" useFilters="true" version="1"> 


		<!-- Filters -->
		<Filter type="com.itko.lisa.vse.stateful.common.DataProtocolFilter">
			<valueToFilterKey>lisa.vse.response</valueToFilterKey>
			<dataProtocol>com.ca.casd.lisa.extensions.odata.ODMEResponseHandler</dataProtocol>
			<processRequests>false</processRequests>
			<processResponses>true</processResponses>
			<CustomFilterData>
			</CustomFilterData>
		</Filter>

		<responseList>lisa.vse.response</responseList>
		<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node log="" name="Virtual Service Tracking" next="end" quiet="true" think="0" type="com.itko.lisa.vse.stateful.VSTrackingStep" uid="null" useFilters="true" version="1"> 

<imageResponseProperty>lisa.vse.image.response</imageResponseProperty>
<liveResponseProperty>lisa.vse.live.response</liveResponseProperty>
<onExceptionStep>abort</onExceptionStep>
    </Node>


    <Node log="" name="Virtual HTTPS Live Invocation" next="Virtual HTTPS Responder" quiet="true" think="0" type="com.itko.lisa.vse.stateful.protocol.http.HttpLiveInvocationStep" uid="null" useFilters="true" version="1"> 


		<!-- Assertions -->
		<CheckResult assertTrue="true" name="If validating" type="com.itko.lisa.vse.stateful.AssertOnExecutionMode">
		<log>Current execution mode is Image Validation, branching to Virtual Service Tracking</log>
		<then>Virtual Service Tracking</then>
		<valueToAssertKey/>
				<executionMode>VALIDATION</executionMode>
		</CheckResult>

		<outputAsObject>true</outputAsObject>
		<onExceptionStep>abort</onExceptionStep>
		<requestPropertyName>lisa.vse.request</requestPropertyName>
		<targetServer>{{LISA_HOST}} </targetServer>
		<targetPort>8080</targetPort>
		<useSSLToServer>false</useSSLToServer>
		<useSSL>false</useSSL>
    </Node>


    <Node log="" name="end" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.NormalEnd" uid="F3C83B1EDF3611E2851D002170EF8FEA" useFilters="true" version="1"> 

    </Node>


    <Node log="" name="fail" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.Abend" uid="F3C83B20DF3611E2851D002170EF8FEA" useFilters="true" version="1"> 

    </Node>


    <Node log="The test was aborted" name="abort" next="fail" quiet="true" think="0h" type="com.itko.lisa.test.AbortStep" uid="F3C83B22DF3611E2851D002170EF8FEA" useFilters="true" version="1"> 

    </Node>


</VSModel>
