<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
-->
<ivysettings>
	<!-- Properties that users can override -->
    <properties file="${ivy.settings.dir}/ivysettings.properties.local" />
    <!-- Load default values, do not override, since default.internal.dependency.rev might have been set in buildCommon.xml -->
    <properties file="${ivy.settings.dir}/ivysettings.properties" environment="env" override="false" />

	<!-- Default values used if ivysettings.properties does not contain user value -->
	<property name="default.cache.dir" value="${ivy.settings.dir}/ivy-cache/cache" override="false" />
	<property name="cache.expiration" value="${default.cache.expiration}" override="false" />
	<property name="cache.internal.expiration" value="${default.cache.internal.expiration}" override="false" />
	<property name="internal.dependency.rev" value="${default.internal.dependency.rev}" override="false" />
	<property name="development.version.number" value="${default.development.version.number}" override="false" />

	<property name="changing.pattern" value=".*SNAPSHOT" />
	<property name="local.repository.dir" value="${ivy.settings.dir}/local-repo" />

    <settings defaultResolver="chain-local-to-remote" />
        
	<caches default="dvs-cache" defaultCacheDir="${default.cache.dir}">
		<!-- For our filesystem, do always search for latest versions. -->
		<cache name="local-repo-cache" useOrigin="true" defaultTTL="10ms" />
		<cache name="dvs-cache" defaultTTL="${cache.expiration}">
			<!-- Ideal would be to use module="soi.*" matcher="regexp", but this matcher throws a NullPointer,
			so we recognize our artifacts just by organisation and revision. -->
 			<ttl organisation="com.ca.dvs" revision="${internal.dependency.rev}" duration="${cache.internal.expiration}" />
		</cache>
	</caches>

	<resolvers>
	
        <filesystem name="local-repo" changingPattern="${changing.pattern}" checkmodified="true" cache="local-repo-cache">
            <ivy pattern="${local.repository.dir}/[organisation]/[module]/[revision]/ivy-[revision].xml" />
            <artifact pattern="${local.repository.dir}/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]" />
        </filesystem>
        
   		<ibiblio name="eclipselink-repo" m2compatible="true" root="http://download.eclipse.org/rt/eclipselink/maven.repo" />            
        <ibiblio name="mulesoft-public" m2compatible="true" root="http://repository.mulesoft.org/nexus/content/groups/public"/>
            
		<chain name="chain-remote" returnFirst="true">
		    <ibiblio name="central"         m2compatible="true"/>
            <ibiblio name="mulesoft-public" m2compatible="true" root="http://repository.mulesoft.org/nexus/content/groups/public"/>
		</chain>
		
        <chain name="chain-local-to-remote" returnFirst="true">
            <resolver ref="local-repo"/>
            <resolver ref="chain-remote"/>
        </chain>

	</resolvers>
	<modules>
	    <!-- No sense looking through all public repositories for com.ca.dvs artifacts.  Limit the search to the local-repo and the dsdc artifactory -->
        <module organisation="com.ca.dvs"                   resolver="local-repo" />
	    
        <!-- org.raml#raml-parser can only be found on the mulesoft repository -->
        <module organisation="org.raml"                                                              resolver="mulesoft-public" />

        <!-- odata4j-0.7.0 depends on eclipselink-2.1.2, but maven central doesn't have it.  Article indicates that we should get it from the eclipselink repository instead -->
        <module organisation="org.eclipse.persistence" name="eclipselink"                            resolver="eclipselink-repo" />
        <module organisation="org.eclipse.persistence" name="javax.persistence"                      resolver="eclipselink-repo" />
	</modules>
	
</ivysettings>
